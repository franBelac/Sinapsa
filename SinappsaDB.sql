CREATE TABLE REGISTRIRANI
(
  userID INT NOT NULL,
  firstName VARCHAR NOT NULL,
  lastName VARCHAR NOT NULL,
  userName VARCHAR NOT NULL,
  userAvatar VARCHAR NOT NULL,
  password VARCHAR NOT NULL,
  email VARCHAR NOT NULL,
  created DATE NOT NULL,
  PRIMARY KEY (userID),
  UNIQUE (userName),
  UNIQUE (email)
);

CREATE TABLE MODERATOR
(
  userID INT NOT NULL,
  PRIMARY KEY (userID),
  FOREIGN KEY (userID) REFERENCES REGISTRIRANI(userID)
);

CREATE TABLE STUDY_PROGRAMME
(
  programmeID INT NOT NULL,
  programeName VARCHAR(100) NOT NULL,
  PRIMARY KEY (programmeID)
);

CREATE TABLE COURSE
(
  courseID INT NOT NULL,
  courseName VARCHAR(100) NOT NULL,
  kraticaCourse VARCHAR(100) NOT NULL,
  programmeID INT NOT NULL,
  PRIMARY KEY (courseID),
  FOREIGN KEY (programmeID) REFERENCES STUDY_PROGRAMME(programmeID)
);

CREATE TABLE CATEGORY
(
  idKategorije INT NOT NULL,
  categoryName VARCHAR(100) NOT NULL,
  courseID INT NOT NULL,
  PRIMARY KEY (idKategorije),
  FOREIGN KEY (courseID) REFERENCES COURSE(courseID)
);

CREATE TABLE OGLAS
(
  oglasID INT NOT NULL,
  oglasTitle VARCHAR(100) NOT NULL,
  oglasDescription VARCHAR(100) NOT NULL,
  timeOfCreation DATE NOT NULL,
  vrstaOglasa VARCHAR(100) NOT NULL,
  creatorUserID INT NOT NULL,
  idKategorije INT NOT NULL,
  PRIMARY KEY (oglasID),
  FOREIGN KEY (creatorUserID) REFERENCES REGISTRIRANI(userID),
  FOREIGN KEY (idKategorije) REFERENCES CATEGORY(idKategorije)
);

CREATE TABLE REPLIES
(
  replyID INT NOT NULL,
  replyText VARCHAR(1000) NOT NULL,
  replyCreated DATE NOT NULL,
  statusValue VARCHAR NOT NULL,
  replyCreatorID INT NOT NULL,
  oglasID INT NOT NULL,
  PRIMARY KEY (replyID),
  FOREIGN KEY (replyCreatorID) REFERENCES REGISTRIRANI(userID),
  FOREIGN KEY (oglasID) REFERENCES OGLAS(oglasID)
);

CREATE TABLE DELETEDOGLAS
(
  explanation VARCHAR(1000) NOT NULL,
  deletorUserID INT NOT NULL,
  oglasID INT NOT NULL,
  PRIMARY KEY (oglasID),
  FOREIGN KEY (deletorUserID) REFERENCES MODERATOR(userID),
  FOREIGN KEY (oglasID) REFERENCES OGLAS(oglasID)
);

CREATE TABLE GRADE
(
  grade INT NOT NULL,
  instructorID INT NOT NULL,
  learnerID INT NOT NULL,
  oglasID INT NOT NULL,
  PRIMARY KEY (instructorID, learnerID, oglasID),
  FOREIGN KEY (instructorID) REFERENCES REGISTRIRANI(userID),
  FOREIGN KEY (learnerID) REFERENCES REGISTRIRANI(userID),
  FOREIGN KEY (oglasID) REFERENCES OGLAS(oglasID)
);